local UserInputService = game:GetService("UserInputService")
        local Players = game:GetService("Players")
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local camera = workspace.CurrentCamera
        local player = Players.LocalPlayer
        local isFiring = false 

        local function fireRocket()
            local weapon = player.Character:FindFirstChild("RPG") or player.Backpack:FindFirstChild("RPG")
            if not weapon then return end 

            local firePosition = camera.CFrame.Position  
            local fireDirection = camera.CFrame.LookVector * 9999  

            task.spawn(function()
                ReplicatedStorage.RocketSystem.Events.FireRocket:InvokeServer(
                    fireDirection, weapon, weapon, firePosition    
                )

                ReplicatedStorage.RocketSystem.Events.FireRocketClient:Fire(
                    firePosition,
                    fireDirection,
                    {
                        ["gravity"] = Vector3.new(0, 0, 0),  
                        ["velocity"] = 999999999, 
                        ["Distance"] = 999999,  
                        ["ExplosionDamage"] = 120,
                        ["ExpRadius"] = 52,
                    },
                    ReplicatedStorage.RocketSystem.Rockets["RPG Rocket"],
                    weapon, weapon, player
                )
            end)
        end

        local function startFiring()
            isFiring = true
            task.spawn(function()
                while isFiring do
                    fireRocket()
                    task.wait(-math.huge)
                end
            end)
        end

        local function stopFiring()
            isFiring = false
        end

        UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if input.KeyCode == Enum.KeyCode.G and not gameProcessed then
                startFiring()
            end
        end)

        UserInputService.InputEnded:Connect(function(input, gameProcessed)
            if input.KeyCode == Enum.KeyCode.G and not gameProcessed then
                stopFiring()
            end
        end)

_G.HeadSize = 30 
_G.Disabled = true
game:GetService('RunService').RenderStepped:connect(function()
if _G.Disabled then
for i,v in next, game:GetService('Players'):GetPlayers() do
if v.Name ~= game:GetService('Players').LocalPlayer.Name then
pcall(function()
v.Character.Head.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
v.Character.Head.Transparency = 1
v.Character.Head.BrickColor = BrickColor.new("Red")
v.Character.Head.Material = "Neon"
v.Character.Head.CanCollide = false
v.Character.Head.Massless = true
end)


local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local dragging = false
local dragStart = nil
local startPos = nil

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SkipachSoft"

local frame = Instance.new("Frame")
frame.Name = "SoftUse"
frame.Size = UDim2.new(0, 100,0, 100)
frame.Position = UDim2.new(0, 0,0.907, 0)
frame.BackgroundColor3 = Color3.new(0, 1, 0.14902)
frame.Parent = screenGui
screenGui.Parent = playerGui
frame.Visible = true

frame.MouseButton1Down:Connect(function(mouse)
	dragging = true
	dragStart = mouse.Position
	startPos = frame.Position
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
	if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

frame.MouseButton1Up:Connect(function()
	dragging = false
end)

